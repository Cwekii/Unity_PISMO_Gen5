

A Programmer is working on a 3rd-person action/adventure game and needs to implement a Raycast that collides with everything in layers 1, 2, 3, 4, 5, 6, and 7 but not collide with objects in layer 8 (the player layer). 
 
 The code to do the Raycast is:
 
 // configure layerMask
 
 RaycastHit hit;
 
 if (Physics.Raycast(transform.position, transform.TransformDirection(Vector3.forward), out hit, Mathf.Infinity, layerMask))
 {
         Debug.DrawRay(transform.position, transform.TransformDirection(Vector3.forward) * hit.distance, Color.red);
         Debug.Log("Did Hit");
 }
 
 Which two lines of code and comments does the Programmer need to implement at the beginning of the code segment to accomplish this objective? (Choose two.)



Answers: 
1. // Bit shift the index of the layer (8) to get a bit mask int layerMask = 1 << 8; 
2. // Use the negative of the layerMask layerMask = -layerMask; 
3. // Load the layer to ignore into the layerMask variable Int layerMask = 8; 
4. // Load all the layers to ignore into the layerMask Int layerMask = 1 + 2 + 3 + 4 + 5 + 6 + 7; 
5. // Invert the bit mask to include all layers except for layer 8 layerMask = ~layerMask; 



Correct Answers: 
1. // Bit shift the index of the layer (8) to get a bit mask int layerMask = 1 << 8; 
5. // Invert the bit mask to include all layers except for layer 8 layerMask = ~layerMask; 



Explanation: 
Explanation The Programmer should bit shift the index of the layer (8) to get a bitMask by using the bit shift operator <<. This action alone would cause the Raycast to collide with this layer (8), so it is important to remember to also invert the bit mask to so you are including all layers except for this one. The Programmer should also invert the bit mask by using the inverse bit mask operator "~" to ensure that the Raycast collides with everything except the current layer in the bitMask. The Programmer should not load the value of the layer index directly into the layerMask variable. This will be treated as the value 8, not as a bitMask. The Programmer should not just add all the layers together. This results in a value of 28 and not an accurate bitMask. The Programmer should not use the negative of the layerMask but should use the invert operator ~. References Physics.Raycast